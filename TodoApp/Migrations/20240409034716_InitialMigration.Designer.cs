// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Data;

#nullable disable

namespace TodoApp.Migrations
{
    [DbContext(typeof(TodoDBContext))]
    [Migration("20240409034716_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Models.Priority", b =>
                {
                    b.Property<int>("PriorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriorityID"));

                    b.Property<int>("High")
                        .HasColumnType("int");

                    b.Property<int>("Low")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.Property<int>("TodoID")
                        .HasColumnType("int");

                    b.HasKey("PriorityID");

                    b.HasIndex("TodoID")
                        .IsUnique();

                    b.ToTable("Priority");
                });

            modelBuilder.Entity("TodoApp.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusID"));

                    b.Property<bool>("InProgress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOverdue")
                        .HasColumnType("bit");

                    b.Property<int>("TodoID")
                        .HasColumnType("int");

                    b.HasKey("StatusID");

                    b.HasIndex("TodoID")
                        .IsUnique();

                    b.ToTable("Status");
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.Property<int>("TodoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TodoID"));

                    b.Property<DateTime>("CompletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueOn")
                        .HasColumnType("datetime2");

                    b.HasKey("TodoID");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("TodoApp.Models.Priority", b =>
                {
                    b.HasOne("TodoApp.Models.Todo", "Todo")
                        .WithOne("Priority")
                        .HasForeignKey("TodoApp.Models.Priority", "TodoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Todo");
                });

            modelBuilder.Entity("TodoApp.Models.Status", b =>
                {
                    b.HasOne("TodoApp.Models.Todo", "Todo")
                        .WithOne("Status")
                        .HasForeignKey("TodoApp.Models.Status", "TodoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Todo");
                });

            modelBuilder.Entity("TodoApp.Models.Todo", b =>
                {
                    b.Navigation("Priority");

                    b.Navigation("Status");
                });
#pragma warning restore 612, 618
        }
    }
}

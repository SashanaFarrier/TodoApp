@page
@model TodoApp.Pages.DashboardModel

@{
    Layout = "_TaskViewLayout";
    ViewData["Title"] = "Dashboard";

    int ongoingTasksCount = 0;
    int completedTasksCount = 0;
    int dueTasksCount = 0;

    DateTime currentDate = DateTime.Now.Date;
    int daysToSubtract = (int)currentDate.DayOfWeek;
    var startOfTheWeek = currentDate.AddDays(-daysToSubtract);

    if(Model.Todos != null && Model.Todos.Count > 0)
    {
        foreach (var task in Model.Todos)
        {
            
            if (task.Status == "Started" && task.DueOn.Date >= startOfTheWeek.Date && (int)task.DueOn.DayOfWeek <= 6
              )
            {
                ongoingTasksCount++;
            }

            if ((task.CompletedOn.Date >= startOfTheWeek.Date && (int)task.CompletedOn.DayOfWeek < daysToSubtract + 1) &&
            task.Status == "Completed")
            {
                completedTasksCount++;

            }

            if (task.DueOn.Date >= startOfTheWeek.Date && (int)task.DueOn.DayOfWeek <= 6)
            {

                // daysToSubtract == 6 && task.Status != "Completed"
                dueTasksCount++;
            }

        }
    }

}

<section class="position-relative | dashboard-homepage">
    <div class="row">
        <div class="col-3 p-0">
            <partial name="_SideBar" />
        </div>
        <div class="col-9 p-3 | gradient-bg">
            <div class="container">
                <div class="text-white | dashboard-header">
                    <partial name="_WelcomeText" />
                </div>
                <div class="weekly-accomplishment | row mb-5">
                    <div class="week | col ">
                        <p class="fw-bold m-0 border-end">My week</p>
                    </div>
                    <div class="task-overdue | col">
                        <p class="m-0 border-end">(@dueTasksCount) Tasks</p>
                    </div>
                    <div class="task-ongoing | col">
                        <p class="m-0 border-end">(@ongoingTasksCount) Ongoing</p>
                    </div>
                    <div class="task-completed | col">
                        <p class="m-0">(@completedTasksCount) Completed</p>
                    </div>
                </div>
                <button class="text-white fw-bold p-2 ps-0 m-0 border-0 bg-transparent | dropdown-btn">
                    <i class="fa-solid fa-angle-down"></i>
                    View Today's Task
                </button>

                <div class="tasks-container">
                    <div class="tasks-table | p-3">
                        <div class="text-white | table-body">
                            <div class="today-tasks">
                                <ul class="list-unstyled border-top">
                                    @if (Model.Todos != null && Model.Todos.Count > 0)
                                    {
                                        foreach (var task in Model.Todos)
                                        {
                                            var today = DateTime.Now;
                                            var currentTime = new TimeSpan(today.Hour, today.Minute, 0);
                                            if (task.DueOn.Date == today.Date)
                                            {
                                                <li class="border-bottom task-name">
                                                    <div class="row">
                                                        <div class="col">
                                                            <div class="d-flex justify-content-between align-items-center p-2">
                                                                <div class="content">
                                                                    <p class="m-0"> @task.Details</p>
                                                                    @{
                                                                        if (task.DueOn.TimeOfDay < currentTime)
                                                                        {
                                                                            <p class="fs-6 text-danger m-0">
                                                                                <span><i class="fa-regular fa-clock"></i></span>
                                                                                @task.DueOn.ToShortTimeString()
                                                                            </p>
                                                                        }
                                                                        else
                                                                        {
                                                                            <p class="fs-6 text-success m-0">
                                                                                <span><i class="fa-regular fa-clock"></i></span>
                                                                                @task.DueOn.ToShortTimeString()
                                                                            </p>
                                                                        }
                                                                    }

                                                                </div>


                                                                <button type="button" class="edit-btn border-0 p-1 px-2 rounded-2 opacity-0 bg-transparent" data-bs-toggle="modal" data-bs-target="@("#edit-popup-" + task.TodoID)">
                                                                    <i class="fa-solid fa-angle-right text-black"></i>
                                                                </button>

                                                            </div>

                                                        </div>

                                                        <partial name="_UpdatePartialView" model="new _UpdatePartialViewModel(task)" />

                                                    </div>

                                                </li>
                                            }

                                        }
                                    }
                                </ul>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>